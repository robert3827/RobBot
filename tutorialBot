import random

import sc2
from sc2 import Race, Difficulty
from sc2.constants import *
from sc2.player import Bot, Computer


class RobBot(sc2.BotAI):
    async def on_step(self, iteration):
        await self.distribute_workers()
        await self.build_workers()
        await self.build_pylons()
        await self.expand()
        await self.build_assim()
    
    async def build_workers(self):
        for nexus in self.units(NEXUS).ready.noqueue:
            if self.can_afford(PROBE):
                await self.do(nexus.train(PROBE))
    async def build_pylons(self):
        if(self.supply_left < 5 and not self.already_pending(PYLON)):
            nexuses = self.units(NEXUS).ready
            if nexuses.exists:
                if self.can_afford(PYLON):
                    await self.build(PYLON, near=nexuses.first)
                    
    async def expand(self):
        if self.units(NEXUS).amount < 2 and self.can_afford(NEXUS):
            await self.expand_now()
    async def build_assim(self):
        
    

            



def main():
    sc2.run_game(sc2.maps.get("AbyssalReefLE"), [
        Bot(Race.Protoss, RobBot()),
        Computer(Race.Terran, Difficulty.Easy)
    ], realtime=True)

if __name__ == '__main__':
    main()
